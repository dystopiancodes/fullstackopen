{"version":3,"sources":["filter.js","personform.js","persons.js","header.js","notification.js","services/phoneService.js","index.js"],"names":["Filter","props","value","filter","onChange","handleFilterChange","Personform","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","person","name","toLowerCase","includes","map","key","number","onClick","removeName","Header","text","Notification","styles","color","border","marginTop","marginBottom","padding","style","message","baseUrl","axios","get","then","response","data","post","id","newObject","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","service","event","target","preventDefault","nameObject","checkObject","find","el","window","confirm","personResponse","concat","setTimeout","personObject","console","log","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8dacbf0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = (props) => {\n  return (\n    <div>\n      fitler shown with:\n      <input value={props.filter} onChange={props.handleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Personform = (props) => {\n  return (\n    <form onSubmit={props.addName}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number:\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Personform;\n","import React from \"react\";\n\nconst Persons = (props) => {\n  return props.persons\n    .filter((person) => {\n      return person.name.toLowerCase().includes(props.filter.toLowerCase());\n    })\n    .map((person) => (\n      <p key={person.name}>\n        {person.name} {person.number}\n        <button onClick={() => props.removeName(person)}>delete</button>\n      </p>\n    ));\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Header = (props) => {\n  return <h1>{props.text}</h1>;\n};\n\nexport default Header;\n","import React from \"react\";\nconst Notification = (props) => {\n  const styles = {\n    color: props.color,\n    border: `solid 1px ${props.color}`,\n    marginTop: 10,\n    marginBottom: 10,\n    padding: 10,\n  };\n  return <div style={styles}>{props.message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst addName = (newName) => {\n  const request = axios.post(baseUrl, newName);\n  return request.then((response) => response.data);\n};\n\nconst updateName = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst removeName = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  addName,\n  updateName,\n  removeName,\n};\n","import ReactDOM from \"react-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport Filter from \"./filter\";\nimport Personform from \"./personform\";\nimport Persons from \"./persons\";\nimport Header from \"./header\";\nimport Notification from \"./notification.js\";\nimport service from \"./services/phoneService.js\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    service.getAll().then((persons) => {\n      setPersons(persons);\n    });\n  }, []);\n\n  const addName = (event) => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    };\n    let checkObject = persons.find((el) => el.name === newName);\n\n    if (checkObject) {\n      if (\n        window.confirm(\n          `${nameObject.name} already exist, do you want to update the number?`\n        )\n      ) {\n        service\n          .updateName(checkObject.id, nameObject)\n          .then((personResponse) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== personResponse.id ? person : personResponse\n              )\n            );\n          });\n      }\n    } else {\n      service.addName(nameObject).then((name) => {\n        setPersons(persons.concat(name));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setMessage({ text: `${name.name} correctly added`, color: \"#00ff00\" });\n        setTimeout(() => {\n          setMessage(null);\n        }, 2000);\n      });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const removeName = (personObject) => {\n    if (window.confirm(`Do you really want to delete ${personObject.name}?`)) {\n      service\n        .removeName(personObject.id)\n        .then((response) => {\n          console.log(response);\n          setPersons(persons.filter((person) => person.id !== personObject.id));\n          setMessage({\n            text: `${personObject.name} correctly removed`,\n            color: \"#00ff00\",\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 2000);\n        })\n        .catch((error) => {\n          setMessage({\n            text: `${personObject.name} was already removed from server`,\n            color: \"#ff0000\",\n          });\n          setPersons(persons.filter((person) => person.id !== personObject.id));\n          setTimeout(() => {\n            setMessage(null);\n          }, 2000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Header text=\"Phonebook\" />\n      {message ? (\n        <Notification message={message.text} color={message.color} />\n      ) : (\n        \"\"\n      )}\n      <Filter value={filter} handleFilterChange={handleFilterChange} />\n      <Header text=\"Add new\" />\n      <Personform\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        addName={addName}\n      />\n      <Header text=\"Numbers\" />\n      <Persons persons={persons} filter={filter} removeName={removeName} />\n    </div>\n  );\n};\n\nexport default App;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}